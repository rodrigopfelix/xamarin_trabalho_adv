// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using XamarinUP2018.Models;
//
//    var unsplashPicture = UnsplashPicture.FromJson(jsonString);

namespace XamarinUP2018.Models
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using J = Newtonsoft.Json.JsonPropertyAttribute;
    using R = Newtonsoft.Json.Required;
    using N = Newtonsoft.Json.NullValueHandling;

    public partial class UnsplashPicture
    {
        [J("id", NullValueHandling = N.Ignore)] public string Id { get; set; }
        [J("created_at", NullValueHandling = N.Ignore)] public DateTimeOffset? CreatedAt { get; set; }
        [J("updated_at", NullValueHandling = N.Ignore)] public DateTimeOffset? UpdatedAt { get; set; }
        [J("width", NullValueHandling = N.Ignore)] public long? Width { get; set; }
        [J("height", NullValueHandling = N.Ignore)] public long? Height { get; set; }
        [J("color", NullValueHandling = N.Ignore)] public string Color { get; set; }
        [J("description", NullValueHandling = N.Ignore)] public string Description { get; set; }
        [J("alt_description", NullValueHandling = N.Ignore)] public string AltDescription { get; set; }
        [J("urls", NullValueHandling = N.Ignore)] public Urls Urls { get; set; }
        [J("links", NullValueHandling = N.Ignore)] public UnsplashPictureLinks Links { get; set; }
        [J("categories", NullValueHandling = N.Ignore)] public List<object> Categories { get; set; }
        [J("likes", NullValueHandling = N.Ignore)] public long? Likes { get; set; }
        [J("liked_by_user", NullValueHandling = N.Ignore)] public bool? LikedByUser { get; set; }
        [J("current_user_collections", NullValueHandling = N.Ignore)] public List<object> CurrentUserCollections { get; set; }
        [J("user", NullValueHandling = N.Ignore)] public User User { get; set; }
        [J("exif", NullValueHandling = N.Ignore)] public Exif Exif { get; set; }
        [J("views", NullValueHandling = N.Ignore)] public long? Views { get; set; }
        [J("downloads", NullValueHandling = N.Ignore)] public long? Downloads { get; set; }
        [J("location", NullValueHandling = N.Ignore)] public Location Location { get; set; }
    }

    public partial class Exif
    {
        [J("make", NullValueHandling = N.Ignore)] public string Make { get; set; }
        [J("model", NullValueHandling = N.Ignore)] public string Model { get; set; }
        [J("exposure_time", NullValueHandling = N.Ignore)] public string ExposureTime { get; set; }
        [J("aperture", NullValueHandling = N.Ignore)] public string Aperture { get; set; }
        [J("focal_length", NullValueHandling = N.Ignore)] public string FocalLength { get; set; }
        [J("iso", NullValueHandling = N.Ignore)] public long? Iso { get; set; }
    }

    public partial class UnsplashPictureLinks
    {
        [J("self", NullValueHandling = N.Ignore)] public Uri Self { get; set; }
        [J("html", NullValueHandling = N.Ignore)] public Uri Html { get; set; }
        [J("download", NullValueHandling = N.Ignore)] public Uri Download { get; set; }
        [J("download_location", NullValueHandling = N.Ignore)] public Uri DownloadLocation { get; set; }
    }

    public partial class Location
    {
        [J("title", NullValueHandling = N.Ignore)] public string Title { get; set; }
        [J("name")] public object Name { get; set; }
        [J("city", NullValueHandling = N.Ignore)] public string City { get; set; }
        [J("country", NullValueHandling = N.Ignore)] public string Country { get; set; }
        [J("position", NullValueHandling = N.Ignore)] public Position Position { get; set; }
    }

    public partial class Position
    {
        [J("latitude")] public object Latitude { get; set; }
        [J("longitude")] public object Longitude { get; set; }
    }

    public partial class Urls
    {
        [J("raw", NullValueHandling = N.Ignore)] public Uri Raw { get; set; }
        [J("full", NullValueHandling = N.Ignore)] public Uri Full { get; set; }
        [J("regular", NullValueHandling = N.Ignore)] public Uri Regular { get; set; }
        [J("small", NullValueHandling = N.Ignore)] public Uri Small { get; set; }
        [J("thumb", NullValueHandling = N.Ignore)] public Uri Thumb { get; set; }
    }

    public partial class User
    {
        [J("id", NullValueHandling = N.Ignore)] public string Id { get; set; }
        [J("updated_at", NullValueHandling = N.Ignore)] public DateTimeOffset? UpdatedAt { get; set; }
        [J("username", NullValueHandling = N.Ignore)] public string Username { get; set; }
        [J("name", NullValueHandling = N.Ignore)] public string Name { get; set; }
        [J("first_name", NullValueHandling = N.Ignore)] public string FirstName { get; set; }
        [J("last_name", NullValueHandling = N.Ignore)] public string LastName { get; set; }
        [J("twitter_username")] public string TwitterUsername { get; set; }
        [J("portfolio_url", NullValueHandling = N.Ignore)] public Uri PortfolioUrl { get; set; }
        [J("bio", NullValueHandling = N.Ignore)] public string Bio { get; set; }
        [J("location", NullValueHandling = N.Ignore)] public string Location { get; set; }
        [J("links", NullValueHandling = N.Ignore)] public UserLinks Links { get; set; }
        [J("profile_image", NullValueHandling = N.Ignore)] public ProfileImage ProfileImage { get; set; }
        [J("instagram_username", NullValueHandling = N.Ignore)] public string InstagramUsername { get; set; }
        [J("total_collections", NullValueHandling = N.Ignore)] public long? TotalCollections { get; set; }
        [J("total_likes", NullValueHandling = N.Ignore)] public long? TotalLikes { get; set; }
        [J("total_photos", NullValueHandling = N.Ignore)] public long? TotalPhotos { get; set; }
        [J("accepted_tos", NullValueHandling = N.Ignore)] public bool? AcceptedTos { get; set; }
    }

    public partial class UserLinks
    {
        [J("self", NullValueHandling = N.Ignore)] public Uri Self { get; set; }
        [J("html", NullValueHandling = N.Ignore)] public Uri Html { get; set; }
        [J("photos", NullValueHandling = N.Ignore)] public Uri Photos { get; set; }
        [J("likes", NullValueHandling = N.Ignore)] public Uri Likes { get; set; }
        [J("portfolio", NullValueHandling = N.Ignore)] public Uri Portfolio { get; set; }
        [J("following", NullValueHandling = N.Ignore)] public Uri Following { get; set; }
        [J("followers", NullValueHandling = N.Ignore)] public Uri Followers { get; set; }
    }

    public partial class ProfileImage
    {
        [J("small", NullValueHandling = N.Ignore)] public Uri Small { get; set; }
        [J("medium", NullValueHandling = N.Ignore)] public Uri Medium { get; set; }
        [J("large", NullValueHandling = N.Ignore)] public Uri Large { get; set; }
    }

    public partial class UnsplashPicture
    {
        public static List<UnsplashPicture> FromJson(string json) => JsonConvert.DeserializeObject<List<UnsplashPicture>>(json, XamarinUP2018.Models.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this List<UnsplashPicture> self) => JsonConvert.SerializeObject(self, XamarinUP2018.Models.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
